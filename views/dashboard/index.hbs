<div class="row">
    <div class="col s12 m12 l12">
        <form action="/dashboard" method="GET">
            <div class="input-field col s12 m5 l2 offset-l7">
                <input id="init" name="init" type="date" value="{{init}}">
                <label for="nome">Início:</label>
            </div>
            <div class="input-field col s12 m5 l2">
                <input id="end" name="end" type="date" value="{{end}}">
                <label for="nome">Fim:</label>
            </div>
            <div class="input-field col s12 m2 l1">
                <button type="submit" class="waves-effect waves-light btn color-blue tooltipped right"
                    data-position="bottom" data-tooltip="Pesquisar">
                    <i class="material-icons">search</i>
                </button>
            </div>
        </form>
    </div>
    <div class="col m6 s12 l3">
        <div class="card color-blue white-text">
            <div class="card-content">
                <span class="card-title center">Total dívida</span>
                <h5 class="center">R$ {{toFixed value=data.divida fixed=2}}</h5>
            </div>
        </div>
    </div>
    <div class="col m6 s12 l3">
        <div class="card">
            <div class="card-content">
                <span class="card-title center">Valor vendido</span>
                <h5 class="center">R$ {{toFixed value=data.valorTotal fixed=2}}</h5>
            </div>
        </div>
    </div>
    <div class="col m6 s12 l3">
        <div class="card">
            <div class="card-content">
                <span class="card-title center">Valor recebido</span>
                <h5 class="center">R$ {{toFixed value=data.valorPago fixed=2}}</h5>
            </div>
        </div>
    </div>
    <div class="col m6 s12 l3">
        <div class="card">
            <div class="card-content">
                <span class="card-title center">Valor pendente</span>
                <h5 class="center">R$ {{toFixed value=data.valorDevido fixed=2}}
                    {{#if data.valorDevidoDown}}
                    <i class="material-icons red-text">arrow_downward</i>
                    {{/if}}
                    {{#if data.valorDevidoUp}}
                    <i class="material-icons green-text">arrow_upward</i>
                    {{/if}}

                </h5>
            </div>
        </div>
    </div>
    <div class="col m6 s12 l8">
        <div class="card">
            <div class="card-content">
                <span class="card-title center">Vendas</span>
                <canvas id="canvasVendas" width="200" height="100"></canvas>
            </div>
        </div>
    </div>
    <div class="col m6 s12 l4">
        <div class="card">
            <div class="card-content">
                <span class="card-title center">Pago x Pendente</span>
                <canvas id="canvasPagoPendente" width="200" height="100"></canvas>
            </div>
        </div>
    </div>
    <div class="col m6 s12 l4">
        <div class="card">
            <div class="card-content">
                <span class="card-title center">Vendas</span>
                <h5 class="center">{{data.quantidade}}</h5>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.datepicker').datepicker({
            autoClose: true,
            i18n: {
                cancel: 'Cancelar',
                clear: 'Limpar',
                done: 'Ok',
                previousMonth: '‹',
                nextMonth: '›',
                format: 'dd/mm/yyyy',
                months: [
                    'Janeiro',
                    'Fevereiro',
                    'Março',
                    'Abril',
                    'Maio',
                    'Junho',
                    'Julho',
                    'Agosto',
                    'Setembro',
                    'Outubro',
                    'Novembro',
                    'Dezembro'
                ],
                monthsShort: [
                    'Jan',
                    'Fev',
                    'Mar',
                    'Abr',
                    'Mai',
                    'Jun',
                    'Jul',
                    'Ago',
                    'Set',
                    'Out',
                    'Nov',
                    'Dez'
                ],
                weekdays: [
                    'Domingo',
                    'Segunda-feira',
                    'Terça-feira',
                    'Quarta-feira',
                    'Quinta-feira',
                    'Sexta-feira',
                    'Sábado'
                ],
                weekdaysShort: [
                    'Dom',
                    'Seg',
                    'Ter',
                    'Qua',
                    'Qui',
                    'Sex',
                    'Sab'
                ],
                weekdaysAbbrev: [
                    'D', 'S', 'T', 'Q', 'Q', 'S', 'S'
                ]
            }
        });
    });

    var data = {{{ data.values }}}
    var valorPago = {{{ data.valorPago }}}
    var valorDevido = {{{ data.valorDevido }}}

    var labels = data.map(item => item.data.dia + '/' + item.data.mes + '/' + item.data.ano);
    var values_valorTotal = data.map(item => item.valorTotal);
    var values_valorPago = data.map(item => item.valorPago);
    var values_valorDevido = data.map(item => item.valorDevido);

    var lineChartData = {
        labels: labels,
        datasets: [{
            label: 'Valor',
            borderColor: "#4caf50",
            backgroundColor: "#4caf50",
            fill: false,
            data: values_valorTotal,
        }]
    };

    window.onload = function () {
        var canvasVendas = document.getElementById('canvasVendas').getContext('2d');
        window.myLine = Chart.Line(canvasVendas, {
            data: lineChartData,
            options: {
                stacked: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            callback: function (value, index, values) {
                                return value.toLocaleString("pt-br", { style: "currency", currency: "BRL" });
                            }
                        }
                    }]
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            return "Valor: " + tooltipItem.yLabel.toLocaleString("pt-br", { style: "currency", currency: "BRL" });
                        }
                    }
                }
            }
        });

        var canvasPagoPendente = document.getElementById('canvasPagoPendente').getContext('2d');
        var canvasPagoPendenteChart = new Chart(canvasPagoPendente, {
            type: 'doughnut',
            data: {
                datasets: [{
                    data: [valorPago, valorDevido],
                    backgroundColor: ['#4caf50', '#f44336']
                }],
                labels: ['Pago', 'Pendente']
            },
            options: {
                cutoutPercentage: 60,
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var dataset = data['datasets'][0];
                            var value = dataset['data'][tooltipItem['index']];
                            var label = data['labels'][tooltipItem['index']];
                            return label + ": " + value.toLocaleString("pt-br", { style: "currency", currency: "BRL" });
                        }
                    }
                }
            }
        });
    };

</script>

<script src="/scripts/Chart.min.js"></script>